--- base/src/portvideo.cpp
+++ base/src/portvideo.cpp
@@ -182,17 +182,12 @@
 
     memset(&avcparam, 0, sizeof(avcparam));
 
-    //set buffer sharing mode
+    avcparam.eProfile = OMX_VIDEO_AVCProfileVendorStartUnused;  //defaul profle for buffer sharing in opencore
+    avcparam.eLevel = OMX_VIDEO_AVCLevelVendorStartUnused;     //default level for buffer sharing in opencore
+   
+//set buffer sharing mode
 #ifdef COMPONENT_SUPPORT_BUFFER_SHARING
-#ifdef COMPONENT_SUPPORT_OPENCORE
     SetPortBufferSharingInfo(OMX_TRUE);
-    avcparam.eProfile = OMX_VIDEO_AVCProfileVendorStartUnused;
-    avcparam.eLevel = OMX_VIDEO_AVCLevelVendorStartUnused;
-#endif
-#else
-    SetPortBufferSharingInfo(OMX_FALSE);
-//    avcparam.eProfile = OMX_VIDEO_AVCProfileVendorStartUnused;
-//    avcparam.eLevel = OMX_VIDEO_AVCLevelVendorStartUnused;
 #endif
 
     ComponentBase::SetTypeHeader(&avcparam, sizeof(avcparam));
@@ -243,6 +238,18 @@
     avcparam.nCabacInitIdc = p->nCabacInitIdc;
     avcparam.eLoopFilterMode = p->eLoopFilterMode;
 
+#ifdef COMPONENT_SUPPORT_OPENCORE
+#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
+// sepcial case ,not change default profile and level for opencore buffer sharing.
+#else
+    avcparam.eProfile = p->eProfile;
+    avcparam.eLevel = p->eLevel;
+#endif
+#else
+    avcparam.eProfile = p->eProfile;
+    avcparam.eLevel = p->eLevel;
+#endif
+
     return OMX_ErrorNone;
 }
 
@@ -266,17 +273,13 @@
     memset(&mpeg4param, 0, sizeof(mpeg4param));
     ComponentBase::SetTypeHeader(&mpeg4param, sizeof(mpeg4param));
 
-#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
-#ifdef COMPONENT_SUPPORT_OPENCORE
-    SetPortBufferSharingInfo(OMX_TRUE);
     mpeg4param.eProfile = OMX_VIDEO_MPEG4ProfileVendorStartUnused;
     mpeg4param.eLevel = OMX_VIDEO_MPEG4LevelVendorStartUnused;
+
+#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
+    SetPortBufferSharingInfo(OMX_TRUE);
 #endif
-#else
-    SetPortBufferSharingInfo(OMX_FALSE);
-//  mpeg4param.eProfile = OMX_VIDEO_MPEG4ProfileVendorStartUnused;
-//  mpeg4param.eLevel = OMX_VIDEO_MPEG4LevelVendorStartUnused;
-#endif
+
 }
 
 OMX_ERRORTYPE PortMpeg4::SetPortMpeg4Param(
@@ -310,8 +313,19 @@
     mpeg4param.bACPred = p->bACPred;
     mpeg4param.nMaxPacketSize = p->nMaxPacketSize;
     mpeg4param.nTimeIncRes = p->nTimeIncRes;
+
+#ifdef COMPONENT_SUPPORT_OPENCORE
+#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
+// sepcial case ,not change default profile and level for opencore buffer sharing.
+#else
     mpeg4param.eProfile = p->eProfile;
     mpeg4param.eLevel = p->eLevel;
+#endif
+#else
+    mpeg4param.eProfile = p->eProfile;
+    mpeg4param.eLevel = p->eLevel;
+#endif
+
     mpeg4param.nAllowedPictureTypes = p->nAllowedPictureTypes;
     mpeg4param.nHeaderExtension = p->nHeaderExtension;
     mpeg4param.bReversibleVLC = p->bReversibleVLC;
@@ -339,16 +353,11 @@
     memset(&h263param, 0, sizeof(h263param));
 
     //set buffer sharing mode
-#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
-#ifdef COMPONENT_SUPPORT_OPENCORE
-    SetPortBufferSharingInfo(OMX_TRUE);
     h263param.eProfile = OMX_VIDEO_H263ProfileVendorStartUnused;
     h263param.eLevel = OMX_VIDEO_H263LevelVendorStartUnused;
-#endif
-#else
-    SetPortBufferSharingInfo(OMX_FALSE);
-//    h263param.eProfile = OMX_VIDEO_H263ProfileVendorStartUnused;
-//    h263param.eLevel = OMX_VIDEO_H263LevelVendorStartUnused;
+
+#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
+    SetPortBufferSharingInfo(OMX_TRUE);
 #endif
 
     ComponentBase::SetTypeHeader(&h263param, sizeof(h263param));
@@ -378,8 +387,20 @@
 
     h263param.nPFrames = p->nPFrames;
     h263param.nBFrames = p->nBFrames;
-//    h263param.eProfile = p->eProfile;
-//    h263param.eLevel   = p->eLevel;
+
+
+#ifdef COMPONENT_SUPPORT_OPENCORE
+#ifdef COMPONENT_SUPPORT_BUFFER_SHARING
+// sepcial case ,not change default profile and level for opencore buffer sharing.
+#else
+    h263param.eProfile = p->eProfile;
+    h263param.eLevel = p->eLevel;
+#endif
+#else
+    h263param.eProfile = p->eProfile;
+    h263param.eLevel = p->eLevel;
+#endif
+
     h263param.bPLUSPTYPEAllowed        = p->bPLUSPTYPEAllowed;
     h263param.nAllowedPictureTypes     = p->nAllowedPictureTypes;
     h263param.bForceRoundingTypeToZero = p->bForceRoundingTypeToZero;
